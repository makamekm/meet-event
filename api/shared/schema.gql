# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type AddressEntity {
  id: Int!
  country: String!
  city: String!
  description: String!
  created_at: DateTime!
  updated_at: DateTime
  latitude: Int!
  longitude: Int!
}

type BannedUserEntity {
  id: Int!
  user: [UserEntity!]!
  description: String!
  created_at: DateTime!
  updated_at: DateTime
}

type CardEntity {
  id: Int!
  image: String!
  description: String!
  created_at: DateTime!
  updated_at: DateTime
  users: [UserEntity!]!
  author: UserEntity!
}

type CommentEntity {
  id: Int!
  comments: [CommentEntity!]!
  parent: [CommentEntity!]!
  event: EventEntity!
  author: UserEntity!
  message: String!
  created_at: DateTime!
  updated_at: DateTime
  rating: Int!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type EventAddressEntity {
  id: Int!
  description: String!
  country: String!
  city: String!
  latitude: Int!
  longitude: Int!
}

type EventEntity {
  id: Int!
  description: String!
  created_at: DateTime!
  updated_at: DateTime
  public_at: DateTime!
  duration: Float!
  question: String!
  answer: String!
  users: [EventUserEntity!]!
  card: CardEntity!
  comments: [CommentEntity!]!
  score: EventScoreEntity!
  genres: [Int!]!
  address: EventScoreEntity!
  address_picked: EventScoreEntity!
}

type EventScoreEntity {
  id: Int!
  event: EventEntity!
  score_multiplex: Int!
  score: Int!
}

type EventUserEntity {
  id: Int!
  type: String!
  user: UserEntity!
  event: EventEntity!
  created_at: DateTime!
  updated_at: DateTime
}

type NotificationEntity {
  id: Int!
  short_message: String!
  message: String!
  created_at: DateTime!
  user: UserEntity!
  type: String!
}

type Query {
  me: UserEntity!
}

type ScoreEntity {
  id: Int!
  user: UserEntity!
  score: Int!
  level: Int!
  newLevelPercentage: Int!
}

type UserAddressEntity {
  id: Int!
  country: String!
  city: String!
  latitude: Int!
  longitude: Int!
}

type UserEntity {
  id: Int!
  email: String!
  first_name: String!
  last_name: String!
  contact_information: String!
  address: UserAddressEntity!
  addresses: [UserAddressEntity!]!
  created_at: DateTime!
  updated_at: DateTime
  recommend_genres: [Int!]!
  score: ScoreEntity!
  cards: [CardEntity!]!
}
